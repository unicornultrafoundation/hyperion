// Hyperion CI test hyperion using "make test"

pipeline {
	agent { label 'x86-8-64-m' }
	
	options {
		timestamps ()
		timeout(time: 3, unit: 'HOURS')
		disableConcurrentBuilds(abortPrevious: true)
	}

	environment {
		GOROOT = '/usr/local/go'
		DOCKER_API_VERSION = 1.45
		GOMEMLIMIT = '60GiB'
		GOCACHE = '/mnt/tmp-disk/go-cache'
		TMPDIR = '/mnt/tmp-disk/'
	}

	stages {
	    stage('Prune Docker') {
	        steps {
	            sh 'docker builder prune -a -f'
	            sh 'docker system prune -a -f'
	        }
	    }

		stage('Check Hyperion Format') {
			steps {
				catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
					sh 'diff=`${GOROOT}/bin/gofmt -l \$(find . -type f -name "*.go"| grep -v "/client/")`; echo "$diff"; test -z "$diff"'
				}
			}
		}

		stage('Make Hyperion') {
			steps {
				sh 'make clean'
				sh 'git submodule update --init --recursive'
				sh 'make all'
			}
		}

		stage('Test Hyperion') {
			steps {
			    sh 'cd genesis && go test ./...'
				sh 'go test ./...  -p 2 --parallel 2 --timeout 30m'
			}
		}
	}
}
